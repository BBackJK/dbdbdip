<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="shop.dbdbdip.back.mapper.UserMapper">
		
	<resultMap type="UserResponseModel" id="UserResultMap">
		<result property="id" column="id" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="name" column="name" />
		<result property="zipcode" column="zipcode" />
		<result property="address" column="address" />
		<result property="createdAt" column="createdAt" />
		<result property="updatedAt" column="updatedAt" />
		<result property="deletedAt" column="deletedAt" />
	</resultMap>
	
	<resultMap type="UserModel" id="UserModelResultMap">
		<result property="id" column="id" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="phone" column="phone" />
		<result property="name" column="name" />
		<result property="zipcode" column="zipcode" />
		<result property="address" column="address" />
		<result property="createdAt" column="createdAt" />
		<result property="updatedAt" column="updatedAt" />
		<result property="deletedAt" column="deletedAt" />
	</resultMap>
	
	
	<select id="getById" parameterType="Integer" resultMap="UserResultMap">
		SELECT 
			* 
		FROM 
			user
		WHERE
			id = #{id} and deletedAt is null
	</select>
	
	<select id="getByEmail" parameterType="String" resultMap="UserModelResultMap">
		SELECT 
			* 
		FROM 
			user
		WHERE
			email = #{email} and deletedAt is null
	</select>
	
	<select id="getByEmailNoPassword" parameterType="String" resultMap="UserResultMap">
		SELECT 
			* 
		FROM 
			user
		WHERE
			email = #{email} and deletedAt is null
	</select>

	
	<insert id="postUser" parameterType="UserCreateModel">
		INSERT INTO
			user 
			(email, name, phone, password, zipcode, address) 
		VALUES 
			(#{email}, #{name},  #{phone}, #{password}, #{zipcode}, #{address})
	</insert>
	
	<update id="putUser" parameterType="UserUpdateModel">
		UPDATE 
			user
		SET 
			name = #{name}, phone = #{phone}, zipcode = #{zipcode}, address = #{address}, updatedAt = #{updatedAt}
		WHERE
			email = #{email} and deletedAt is null
	</update>
	
	<update id="putUserPassword" parameterType="UserUpdatePasswordModel" >
		UPDATE 
			user
		SET 
			password = #{password}, updatedAt = #{updatedAt}
		WHERE
			email = #{email} and deletedAt is null
	</update>
	
	<update id="deleteUser" parameterType="UserDeleteModel">
		UPDATE 
			user
		set 
			deletedAt = #{deletedAt}
		WHERE
			email = #{email} and deletedAt is null
	</update>
</mapper>		